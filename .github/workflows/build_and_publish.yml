name: Publish tagged releases to PyPI

on:
  release:
    types:
      - published

jobs:
  lint_and_typecheck:
    name: Lint and type-check
    uses: ./.github/workflows/linting_and_type_checking.yml

  run_tests:
    name: Run tests
    uses: ./.github/workflows/run_tests.yml

  publish:
    name: Build wheel and publish to test-PyPI, and then PyPI, and publish docs
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          # Install a specific version of uv.
          version: "0.5.9"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dev dependencies
        run: uv pip install --system -e ".[dev]"

      - name: Build the wheel
        run: python -m build

      - name: Publish to test-PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          python -m twine upload --repository testpypi dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m twine upload dist/*

      - name: Install doc dependencies
        run: |
          $HOME/.cargo/bin/uv pip install -e '.[dev]'

      - name: Build and publish docs
        run: mkdocs gh-deploy --force
